{"variants":[{"paths":["\/tutorials\/amaranthinerandomgenerators\/debuglogoperationstutorial"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this tutrial we will look at how we can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger"},{"type":"text","text":" to write messages to "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" and to the unified logging system."}]}],"estimatedTimeInMinutes":10,"title":"Using the AppLogger","image":"log.png","chapter":"Creation","kind":"hero","backgroundImage":"log.png"},{"kind":"tasks","tasks":[{"anchor":"Preparing-the-logger-for-use","title":"Preparing the logger for use","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We will look at how we can prepare the Logger for use."}]}],"mediaPosition":"trailing","media":"logCreate.png"}],"stepsSection":[{"code":"apploggerDemo-1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First we will start off by importing the framework."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare a variable to hold the name of the sub system. This is typically your Appâ€™s bundle id. For more information read the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/DebugLogOperations"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare a variable to hold the name of the category. This is typically idetified by the part of your app.. For more information read the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/DebugLogOperations"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally create the applogger using the above 2 variables."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Writing-only-to-stdout","title":"Writing only to stdout","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We will use the logger to write to stdout."}]}],"mediaPosition":"trailing","media":"stdout.png"}],"stepsSection":[{"code":"apploggerDemo-4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Resume from section 1."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare a variable to hold the enum value the specified the type of operation we wish to perform."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Invoke the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger\/customLog(message:severity:operation:)"},{"type":"text","text":" method to send the message for the desired operatin."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Writing-only-to-log-file","title":"Writing only to log file","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We will use the logger to write to the unified logging system."}]}],"mediaPosition":"trailing","media":"logWrite.png"}],"stepsSection":[{"code":"apploggerDemo-4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Resume from section 1."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-7.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare a variable to hold the enum value the specified the type of operation we wish to perform."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-8.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare a variable to hold the enum value the urgency level of the log."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Invoke the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger\/customLog(message:severity:operation:)"},{"type":"text","text":" method to send the message for the desired operatin."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Writing-to-both-stdout-and-log-file","title":"Writing to both stdout and log file","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We will use the logger to write to both "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" and the unified logging system."}]}],"mediaPosition":"trailing","media":"logDouble.png"}],"stepsSection":[{"code":"apploggerDemo-4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Resume from section 1."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-10.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare a variable to hold the enum value the specified the type of operation we wish to perform."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-11.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare a variable to hold the enum value the urgency level of the log."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"apploggerDemo-12.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Invoke the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger\/customLog(message:severity:operation:)"},{"type":"text","text":" method to send the message for the desired operatin."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"kind":"assessments","assessments":[{"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can only write to "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" and the unified logging system simultaneously."}]}],"content":[],"type":"multiple-choice","choices":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"TRUE"}]}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maybe something else."}]}],"isCorrect":false},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"FALSE"}]}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can write to either one of the 2 or both."}]}],"isCorrect":true}]}],"anchor":"Check-Your-Understanding"}],"identifier":{"url":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Using the AppLogger","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project","category":"Using the different types available"},"hierarchy":{"modules":[{"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/Text-based-content\/Random-strings","projects":[{"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial","sections":[{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial#Generating-random-names"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial#Generating-random-lines"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial#Generating-random-date"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial#Generating-rounded-float"}]}]},{"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/UI-based-content\/Generate-random-Color-values","projects":[{"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial","sections":[{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial#Generate-random-SwiftUI-colors"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial#Generate-random-UIKit-colors"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial#Generate-random-AppKit-colors"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial#Generate-random-images"}]}]},{"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/Enumeration-based-content\/Usage","projects":[{"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/EnumerationBasedContentTutorial","sections":[{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/EnumerationBasedContentTutorial#Creating-a-score-value"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/EnumerationBasedContentTutorial#Generating-other-values-from-a-score-value"}]}]},{"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/Debug-log-operations\/Creation","projects":[{"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial","sections":[{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Preparing-the-logger-for-use"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Writing-only-to-stdout"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Writing-only-to-log-file"},{"kind":"task","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Writing-to-both-stdout-and-log-file"},{"kind":"assessment","reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Check-Your-Understanding"}]}]}],"reference":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents","paths":[["doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/Debug-log-operations","doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/Debug-log-operations\/Creation"]]},"references":{"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/DebugLogOperationsTutorial":{"role":"project","title":"Using the AppLogger","estimatedTime":"10min","abstract":[{"type":"text","text":"In this tutrial we will look at how we can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger"},{"type":"text","text":" to write messages to "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" and to the unified logging system."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial","kind":"project","type":"topic","url":"\/tutorials\/amaranthinerandomgenerators\/debuglogoperationstutorial"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/DebugLogOperationsTutorial#Writing-to-both-stdout-and-log-file":{"role":"pseudoSymbol","title":"Writing to both stdout and log file","abstract":[{"type":"text","text":"In this tutrial we will look at how we can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger"},{"type":"text","text":" to write messages to "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" and to the unified logging system."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Writing-to-both-stdout-and-log-file","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/debuglogoperationstutorial#Writing-to-both-stdout-and-log-file"},"doc://AmaranthineRandomGenerators/documentation/AmaranthineRandomGenerators/AppLogger":{"role":"symbol","title":"AppLogger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppLogger"}],"abstract":[{"type":"text","text":"This object handles unified logging as well as printing on stdout."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AppLogger"}],"url":"\/documentation\/amaranthinerandomgenerators\/applogger"},"doc://AmaranthineRandomGenerators/documentation/AmaranthineRandomGenerators/DebugLogOperations":{"role":"collectionGroup","title":"DebugLogOperations","abstract":[{"type":"text","text":"This type encapsulates the logic to print to stdout and the logic to write logs to the unified logging system into a single unified logic."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/DebugLogOperations","kind":"article","type":"topic","url":"\/documentation\/amaranthinerandomgenerators\/debuglogoperations"},"apploggerDemo-9.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)","","\/\/MARK: - Writing to log file","let logOperations : AppLogger.Operations = AppLogger.Operations.log","","let urgency : AppLogger.Severity = AppLogger.Severity.error","","appLogger.customLog(message: \"This is the item that we want to write to the log file.\",","                    severity: urgency,","                    operation: logOperations)"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-9.swift","type":"file","fileType":"swift","highlights":[{"line":21},{"line":22},{"line":23},{"line":24}]},"apploggerDemo-10.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)","","\/\/MARK: - Writing to both stdout and log file","let operation : AppLogger.Operations = AppLogger.Operations.debugAndLog"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-10.swift","type":"file","fileType":"swift","highlights":[{"line":17},{"line":18}]},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/DebugLogOperationsTutorial#Writing-only-to-stdout":{"role":"pseudoSymbol","title":"Writing only to stdout","abstract":[{"type":"text","text":"In this tutrial we will look at how we can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger"},{"type":"text","text":" to write messages to "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" and to the unified logging system."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Writing-only-to-stdout","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/debuglogoperationstutorial#Writing-only-to-stdout"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/DebugLogOperationsTutorial#Writing-only-to-log-file":{"role":"pseudoSymbol","title":"Writing only to log file","abstract":[{"type":"text","text":"In this tutrial we will look at how we can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger"},{"type":"text","text":" to write messages to "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" and to the unified logging system."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Writing-only-to-log-file","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/debuglogoperationstutorial#Writing-only-to-log-file"},"stdout.png":{"alt":"Write to stdout.","type":"image","identifier":"stdout.png","variants":[{"url":"\/images\/stdout.png","traits":["1x","light"]}]},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/TextBasedContentTutorial#Generating-random-lines":{"role":"pseudoSymbol","title":"Generating random lines","abstract":[{"type":"text","text":"Creating random strings, dates, and floating point numbers that are rounded off."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial#Generating-random-lines","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/textbasedcontenttutorial#Generating-random-lines"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/UIBasedContentTutorial":{"role":"project","title":"Random UI components","estimatedTime":"10min","abstract":[{"type":"text","text":"Generate colors and Images"}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial","kind":"project","type":"topic","url":"\/tutorials\/amaranthinerandomgenerators\/uibasedcontenttutorial"},"apploggerDemo-12.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)","","\/\/MARK: - Writing to both stdout and log file","let operation : AppLogger.Operations = AppLogger.Operations.debugAndLog","","let severity : AppLogger.Severity = AppLogger.Severity.info","","appLogger.customLog(message: \"This is the item that we want to write to both stdout as well as the log file.\",","                    severity: severity,","                    operation: operation)"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-12.swift","type":"file","fileType":"swift","highlights":[{"line":21},{"line":22},{"line":23},{"line":24}]},"doc://AmaranthineRandomGenerators/documentation/AmaranthineRandomGenerators/AppLogger/customLog(message:severity:operation:)":{"role":"symbol","title":"customLog(message:severity:operation:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"customLog"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"severity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Severity","preciseIdentifier":"s:27AmaranthineRandomGenerators9AppLoggerV8SeverityO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Operations","preciseIdentifier":"s:27AmaranthineRandomGenerators9AppLoggerV10OperationsO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"The method that actually performs logging operations. This is the method invoked by the user."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger\/customLog(message:severity:operation:)","kind":"symbol","type":"topic","url":"\/documentation\/amaranthinerandomgenerators\/applogger\/customlog(message:severity:operation:)"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/DebugLogOperationsTutorial#Preparing-the-logger-for-use":{"role":"pseudoSymbol","title":"Preparing the logger for use","abstract":[{"type":"text","text":"In this tutrial we will look at how we can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/AppLogger"},{"type":"text","text":" to write messages to "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" and to the unified logging system."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Preparing-the-logger-for-use","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/debuglogoperationstutorial#Preparing-the-logger-for-use"},"apploggerDemo-5.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)","","\/\/MARK: - Writing to stdout ","let stdoutOperation : AppLogger.Operations = AppLogger.Operations.debug"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-5.swift","type":"file","fileType":"swift","highlights":[{"line":17},{"line":18}]},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/EnumerationBasedContentTutorial":{"role":"project","title":"Working with the Scores enum","estimatedTime":"15min","abstract":[{"type":"text","text":"In this chapter we will get familiar with the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/Scores"},{"type":"text","text":" enum."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/EnumerationBasedContentTutorial","kind":"project","type":"topic","url":"\/tutorials\/amaranthinerandomgenerators\/enumerationbasedcontenttutorial"},"apploggerDemo-8.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)","","\/\/MARK: - Writing to log file","let logOperations : AppLogger.Operations = AppLogger.Operations.log","","let urgency : AppLogger.Severity = AppLogger.Severity.error"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-8.swift","type":"file","fileType":"swift","highlights":[{"line":19},{"line":20}]},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/TextBasedContentTutorial":{"role":"project","title":"Working with text based content","estimatedTime":"5min","abstract":[{"type":"text","text":"Creating random strings, dates, and floating point numbers that are rounded off."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial","kind":"project","type":"topic","url":"\/tutorials\/amaranthinerandomgenerators\/textbasedcontenttutorial"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/UIBasedContentTutorial#Generate-random-AppKit-colors":{"role":"pseudoSymbol","title":"Generate random AppKit colors","abstract":[{"type":"text","text":"Generate colors and Images"}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial#Generate-random-AppKit-colors","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/uibasedcontenttutorial#Generate-random-AppKit-colors"},"apploggerDemo-2.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\""],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-2.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10}]},"apploggerDemo-7.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)","","\/\/MARK: - Writing to log file","let logOperations : AppLogger.Operations = AppLogger.Operations.log"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-7.swift","type":"file","fileType":"swift","highlights":[{"line":17},{"line":18}]},"doc://AmaranthineRandomGenerators/tutorials/Tutorial-Table-of-Contents/Debug-log-operations/Creation":{"role":"article","title":"Creation","abstract":[],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/Debug-log-operations\/Creation","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/debug-log-operations\/creation"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/UIBasedContentTutorial#Generate-random-images":{"role":"pseudoSymbol","title":"Generate random images","abstract":[{"type":"text","text":"Generate colors and Images"}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial#Generate-random-images","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/uibasedcontenttutorial#Generate-random-images"},"apploggerDemo-11.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)","","\/\/MARK: - Writing to both stdout and log file","let operation : AppLogger.Operations = AppLogger.Operations.debugAndLog","","let severity : AppLogger.Severity = AppLogger.Severity.info"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-11.swift","type":"file","fileType":"swift","highlights":[{"line":19},{"line":20}]},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/DebugLogOperationsTutorial#Check-Your-Understanding":{"title":"Check Your Understanding","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"type":"link","identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/DebugLogOperationsTutorial#Check-Your-Understanding","url":"\/tutorials\/amaranthinerandomgenerators\/debuglogoperationstutorial#Check-Your-Understanding"},"doc://AmaranthineRandomGenerators/tutorials/Tutorial-Table-of-Contents/Enumeration-based-content/Usage":{"role":"article","title":"Usage","abstract":[],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/Enumeration-based-content\/Usage","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/enumeration-based-content\/usage"},"doc://AmaranthineRandomGenerators/tutorials/Tutorial-Table-of-Contents/Text-based-content/Random-strings":{"role":"article","title":"Random strings","abstract":[],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/Text-based-content\/Random-strings","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/text-based-content\/random-strings"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/EnumerationBasedContentTutorial#Creating-a-score-value":{"role":"pseudoSymbol","title":"Creating a score value","abstract":[{"type":"text","text":"In this chapter we will get familiar with the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/Scores"},{"type":"text","text":" enum."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/EnumerationBasedContentTutorial#Creating-a-score-value","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/enumerationbasedcontenttutorial#Creating-a-score-value"},"apploggerDemo-3.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\""],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-3.swift","type":"file","fileType":"swift","highlights":[{"line":11},{"line":12}]},"apploggerDemo-1.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-1.swift","type":"file","fileType":"swift","highlights":[]},"apploggerDemo-6.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)","","\/\/MARK: - Writing to stdout","let stdoutOperation : AppLogger.Operations = AppLogger.Operations.debug","","appLogger.customLog(message: \"This is the item we want to write to stdout.\", operation: stdoutOperation)"],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-6.swift","type":"file","fileType":"swift","highlights":[{"line":17},{"line":19},{"line":20}]},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/TextBasedContentTutorial#Generating-rounded-float":{"role":"pseudoSymbol","title":"Generating rounded float","abstract":[{"type":"text","text":"Creating random strings, dates, and floating point numbers that are rounded off."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial#Generating-rounded-float","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/textbasedcontenttutorial#Generating-rounded-float"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/TextBasedContentTutorial#Generating-random-names":{"role":"pseudoSymbol","title":"Generating random names","abstract":[{"type":"text","text":"Creating random strings, dates, and floating point numbers that are rounded off."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial#Generating-random-names","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/textbasedcontenttutorial#Generating-random-names"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/UIBasedContentTutorial#Generate-random-UIKit-colors":{"role":"pseudoSymbol","title":"Generate random UIKit colors","abstract":[{"type":"text","text":"Generate colors and Images"}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial#Generate-random-UIKit-colors","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/uibasedcontenttutorial#Generate-random-UIKit-colors"},"logCreate.png":{"alt":"Setup the App logger.","type":"image","identifier":"logCreate.png","variants":[{"url":"\/images\/logCreate.png","traits":["1x","light"]}]},"doc://AmaranthineRandomGenerators/tutorials/Tutorial-Table-of-Contents":{"role":"overview","title":"How to use the different types","abstract":[{"type":"text","text":"In this tutorial we will look at creating and using the different types."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents","kind":"overview","type":"topic","url":"\/tutorials\/tutorial-table-of-contents"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/EnumerationBasedContentTutorial#Generating-other-values-from-a-score-value":{"role":"pseudoSymbol","title":"Generating other values from a score value","abstract":[{"type":"text","text":"In this chapter we will get familiar with the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/Scores"},{"type":"text","text":" enum."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/EnumerationBasedContentTutorial#Generating-other-values-from-a-score-value","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/enumerationbasedcontenttutorial#Generating-other-values-from-a-score-value"},"doc://AmaranthineRandomGenerators/documentation/AmaranthineRandomGenerators/Scores":{"role":"symbol","title":"Scores","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scores"}],"abstract":[{"type":"text","text":"This enumeration defines the type scores. It is to be used in any rating logic"}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/documentation\/AmaranthineRandomGenerators\/Scores","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scores"}],"url":"\/documentation\/amaranthinerandomgenerators\/scores"},"apploggerDemo-4.swift":{"syntax":"swift","content":["\/\/","\/\/  apploggerDemo.swift","\/\/  ","\/\/","\/\/  Created by Arun Patwardhan on 24\/05\/23.","\/\/","","import AmaranthineRandomGenerators","","let subSystemName : String = Bundle.main.bundleIdentifier ?? \"demo.Subsystem\"","","let messageName : String = \"AppDemo\"","","let appLogger : AppLogger = AppLogger(WithSubsystem: subSystemName,","                                      andCategory: messageName)",""],"fileName":"apploggerDemo.swift","identifier":"apploggerDemo-4.swift","type":"file","fileType":"swift","highlights":[]},"doc://AmaranthineRandomGenerators/tutorials/Tutorial-Table-of-Contents/UI-based-content/Generate-random-Color-values":{"role":"article","title":"Generate random Color values","abstract":[],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/Tutorial-Table-of-Contents\/UI-based-content\/Generate-random-Color-values","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/ui-based-content\/generate-random-color-values"},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/UIBasedContentTutorial#Generate-random-SwiftUI-colors":{"role":"pseudoSymbol","title":"Generate random SwiftUI colors","abstract":[{"type":"text","text":"Generate colors and Images"}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/UIBasedContentTutorial#Generate-random-SwiftUI-colors","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/uibasedcontenttutorial#Generate-random-SwiftUI-colors"},"logDouble.png":{"alt":"Write to both stdout and log file.","type":"image","identifier":"logDouble.png","variants":[{"url":"\/images\/logDouble.png","traits":["1x","light"]}]},"log.png":{"alt":"Unified Logging","type":"image","identifier":"log.png","variants":[{"url":"\/images\/log.png","traits":["1x","light"]}]},"doc://AmaranthineRandomGenerators/tutorials/AmaranthineRandomGenerators/TextBasedContentTutorial#Generating-random-date":{"role":"pseudoSymbol","title":"Generating random date","abstract":[{"type":"text","text":"Creating random strings, dates, and floating point numbers that are rounded off."}],"identifier":"doc:\/\/AmaranthineRandomGenerators\/tutorials\/AmaranthineRandomGenerators\/TextBasedContentTutorial#Generating-random-date","kind":"section","type":"section","url":"\/tutorials\/amaranthinerandomgenerators\/textbasedcontenttutorial#Generating-random-date"},"logWrite.png":{"alt":"Write to log file.","type":"image","identifier":"logWrite.png","variants":[{"url":"\/images\/logWrite.png","traits":["1x","light"]}]}}}